package com.example.World.Users;


import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.Version;
import org.springframework.data.relational.core.mapping.Column;
import org.springframework.lang.NonNull;

import javax.annotation.processing.Generated;
import java.time.LocalDateTime;

public record User_(
        @Id
        Long uid, // Primary key, auto-generated by the database

        @NotEmpty
        @Size(max = 50)
        String user_name, // Unique username, max length of 50

        @NotEmpty
        @Email
        @Size(max = 100)
        String email, // Unique email address, validated as a proper email format

        @NotEmpty
        @Size(min = 8)
        String pass_word, // pass_word (should be hashed before saving)

        @NotEmpty
        @Pattern(regexp = "^\\+?[1-9]\\d{1,14}$", message = "Invalid phone number format")
        String phone_number, // Phone number in international format, unique and validated

        @NonNull
        LocalDateTime created_at, // Timestamp of account creation (defaulted in the database)

        LocalDateTime deleted_at,

        Integer user_role, // Role of the user, 0 for normal user, 1 for superuser, 2 for admin
        @Version
        Integer u_version // Version number for optimistic locking
) {
        @Override
        @NonNull
        public LocalDateTime created_at() {
                if(deleted_at() != null){
                        if (created_at.isAfter(deleted_at())){
                                throw new IllegalStateException("created_at cannot be after deleted_at");
                        }
                }

                return created_at;
        }
}
